name: CI/CD - Build, Test, and Deploy Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Lint (if available)
        run: |
          if [ -f package.json ] && jq -e '.scripts.lint' package.json > /dev/null; then
            npm run lint
          else
            echo "No lint script found. Skipping lint."
          fi

      # Add tests here if you have them
      # - name: Run tests
      #   run: npm test

      - name: Build Docker image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$OWNER/$REPO
          docker build -t $IMAGE_NAME:latest .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$OWNER/$REPO
          docker push $IMAGE_NAME:latest

      - name: Run Docker container for API test
        env:
          API_KEY: ${{ secrets.API_KEY }}
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME=ghcr.io/$OWNER/$REPO
          docker run -d --name fluxe-backend-test -p 3000:3000 \
            -e API_KEY=${API_KEY} \
            -e MISTRAL_API_KEY=${MISTRAL_API_KEY} \
            $IMAGE_NAME:latest
          sleep 30

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/ > /dev/null; then
              echo "Backend is up!"
              exit 0
            fi
            echo "Waiting for backend..."
            sleep 2
          done
          echo "Backend did not start in time"
          docker logs fluxe-backend-test
          exit 1

      - name: Test API endpoint (generate Flutter project)
        run: |
          sudo apt-get update && sudo apt-get install -y curl
          curl -X POST http://localhost:3000/generate \
            -H "Content-Type: application/json" \
            -H "x-api-key: ${{ secrets.API_KEY }}" \
            -d '{"prompt":"Hello from GitHub Actions"}'

      - name: Show Docker logs
        run: docker logs fluxe-backend-test

      - name: Stop and remove container
        run: |
          docker stop fluxe-backend-test
          docker rm fluxe-backend-test

      # Optionally upload APK artifacts if needed
      - name: Upload APKs (if generated)
        uses: actions/upload-artifact@v4
        with:
          name: flutter-apks
          path: flutter_projects/**/build/app/outputs/apk/release/app-release.apk
          if-no-files-found: ignore
